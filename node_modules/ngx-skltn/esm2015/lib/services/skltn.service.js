/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable, Inject } from '@angular/core';
import { SKLTN_CONFIG_TOKEN } from './skltn-config.service';
import * as i0 from "@angular/core";
import * as i1 from "./skltn-config.service";
export class SkltnService {
    /**
     * @param {?} config
     */
    constructor(config) {
        this.ids = [];
        this.defaultConfig = {
            rectRadius: 4,
            bgFill: '#ddd',
            flareFill: 'rgba(255, 255, 255, 0.6)',
            flareWidth: '150px',
            duration: 1200,
            delay: 0,
            timing: 'ease-in-out',
        };
        this.config = Object.assign({}, this.defaultConfig, config);
    }
}
SkltnService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
/** @nocollapse */
SkltnService.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [SKLTN_CONFIG_TOKEN,] }] }
];
/** @nocollapse */ SkltnService.ngInjectableDef = i0.defineInjectable({ factory: function SkltnService_Factory() { return new SkltnService(i0.inject(i1.SKLTN_CONFIG_TOKEN)); }, token: SkltnService, providedIn: "root" });
if (false) {
    /** @type {?} */
    SkltnService.prototype.ids;
    /** @type {?} */
    SkltnService.prototype.config;
    /**
     * @type {?}
     * @private
     */
    SkltnService.prototype.defaultConfig;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tsdG4uc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1za2x0bi8iLCJzb3VyY2VzIjpbImxpYi9zZXJ2aWNlcy9za2x0bi5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVuRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQzs7O0FBSzVELE1BQU0sT0FBTyxZQUFZOzs7O0lBZ0J2QixZQUM4QixNQUFtQjtRQWZqRCxRQUFHLEdBQWEsRUFBRSxDQUFDO1FBSVgsa0JBQWEsR0FBZ0I7WUFDbkMsVUFBVSxFQUFFLENBQUM7WUFDYixNQUFNLEVBQUUsTUFBTTtZQUNkLFNBQVMsRUFBRSwwQkFBMEI7WUFDckMsVUFBVSxFQUFFLE9BQU87WUFDbkIsUUFBUSxFQUFFLElBQUk7WUFDZCxLQUFLLEVBQUUsQ0FBQztZQUNSLE1BQU0sRUFBRSxhQUFhO1NBQ3RCLENBQUM7UUFLQSxJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLElBQUksQ0FBQyxhQUFhLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDOUQsQ0FBQzs7O1lBdkJGLFVBQVUsU0FBQztnQkFDVixVQUFVLEVBQUUsTUFBTTthQUNuQjs7Ozs0Q0FrQkksTUFBTSxTQUFDLGtCQUFrQjs7Ozs7SUFmNUIsMkJBQW1COztJQUVuQiw4QkFBb0I7Ozs7O0lBRXBCLHFDQVFFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSwgSW5qZWN0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTa2x0bkNvbmZpZyB9IGZyb20gJy4uL2ludGVyZmFjZXMvc2tsdG4tY29uZmlnJztcbmltcG9ydCB7IFNLTFROX0NPTkZJR19UT0tFTiB9IGZyb20gJy4vc2tsdG4tY29uZmlnLnNlcnZpY2UnO1xuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBTa2x0blNlcnZpY2Uge1xuXG4gIGlkczogc3RyaW5nW10gPSBbXTtcblxuICBjb25maWc6IFNrbHRuQ29uZmlnO1xuXG4gIHByaXZhdGUgZGVmYXVsdENvbmZpZzogU2tsdG5Db25maWcgPSB7XG4gICAgcmVjdFJhZGl1czogNCxcbiAgICBiZ0ZpbGw6ICcjZGRkJyxcbiAgICBmbGFyZUZpbGw6ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNiknLFxuICAgIGZsYXJlV2lkdGg6ICcxNTBweCcsXG4gICAgZHVyYXRpb246IDEyMDAsXG4gICAgZGVsYXk6IDAsXG4gICAgdGltaW5nOiAnZWFzZS1pbi1vdXQnLFxuICB9O1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIEBJbmplY3QoU0tMVE5fQ09ORklHX1RPS0VOKSBjb25maWc6IFNrbHRuQ29uZmlnLFxuICApIHtcbiAgICB0aGlzLmNvbmZpZyA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMuZGVmYXVsdENvbmZpZywgY29uZmlnKTtcbiAgfVxuXG59XG4iXX0=